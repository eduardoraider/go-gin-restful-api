definitions:
  controllers.DeleteResponse:
    properties:
      data:
        type: string
    type: object
  controllers.GreetingsResponse:
    properties:
      API says:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  httputil.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
  models.Student:
    properties:
      cpf:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      rg:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /{name}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Name to greet
        format: string
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/controllers.GreetingsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: 'API says: What''s up'
      tags:
      - Greetings
  /students:
    get:
      consumes:
      - application/json
      description: get all students
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Student'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: List all students
      tags:
      - Get Students
    post:
      consumes:
      - application/json
      parameters:
      - description: Student object
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.Student'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Student'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Create a new student
      tags:
      - Create Student
  /students/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Student ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Student deleted successfully!
          schema:
            $ref: '#/definitions/controllers.DeleteResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Delete a student by ID
      tags:
      - Delete Student by ID
    get:
      consumes:
      - application/json
      parameters:
      - description: Student ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Student'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get a student by ID
      tags:
      - Get Student by ID
    patch:
      consumes:
      - application/json
      parameters:
      - description: Student ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      - description: Student object
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.Student'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Student'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Edit a student by ID
      tags:
      - Edit Student
  /students/cpf/{cpf}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Student CPF
        format: string
        in: path
        name: cpf
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Student'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Search for a student by CPF
      tags:
      - Search Student by CPF
swagger: "2.0"
